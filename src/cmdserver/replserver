#!/usr/bin/env python
import cmdserver
import logging
import argparse

import logconfig
logger = logging.getLogger(__name__)

class ReplServer(cmdserver.CmdServer):
    def __init__(self, cmdproc_paths, port):
        super(ReplServer, self).__init__(cmdproc_paths, port)

    def start(self):
        logger.info("Starting REPL server...")
        self.startup_cmdprocs()
        while True:
            cmd_string = raw_input(">> ")
            cmd = cmd_string.split()
            self.dispatch_cmd_to_cmdproc(cmd)

    def dispatch_cmd_to_cmdproc(self, cmd_strs):
        if cmd_strs[0] == 'SEND':
            program = cmd_strs[1]
            cmd_name = cmd_strs[2]
            cmd_args = " ".join(cmd_strs[3:])
            cmd = package_cmd(cmd_name, cmd_args)
            self.send_cmd(program, cmd)
        else:
            logger.error("Unrecognized command \"%s\" in \"%s\"", cmd_strs[0], " ".join(cmd_strs))

def package_cmd(cmd_name, cmd_args):
    return [['cmd', cmd_name], ['arg', cmd_args]]

def main():
    # logger.setLevel(logging.INFO)
    logger.info("TEST")

    parser = argparse.ArgumentParser(description="A REPL command server.")
    args, server = cmdserver.cmdserver_main(ReplServer, parser)

    server.start()

if __name__ == '__main__':
    main()
